// Mocks generated by Mockito 5.4.4 from annotations
// in core/test/helpers/tv/test_helper_tv.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i20;
import 'dart:typed_data' as _i21;

import 'package:core/core.dart' as _i8;
import 'package:core/data/datasources/db/database_helper.dart' as _i17;
import 'package:core/data/datasources/tv/tv_local_data_source.dart' as _i14;
import 'package:core/data/datasources/tv/tv_remote_data_source.dart' as _i12;
import 'package:core/data/models/movie/movie_table.dart' as _i19;
import 'package:core/data/models/tv/tv_detail_model.dart' as _i3;
import 'package:core/data/models/tv/tv_model.dart' as _i13;
import 'package:core/data/models/tv/tv_season_detail_model.dart' as _i4;
import 'package:core/data/models/tv/tv_table.dart' as _i15;
import 'package:core/domain/entities/tv/tv.dart' as _i9;
import 'package:core/domain/entities/tv/tv_detail.dart' as _i10;
import 'package:core/domain/entities/tv/tv_season_detail.dart' as _i11;
import 'package:core/domain/repositories/tv/tv_repository.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:sqflite/sqflite.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTVDetailResponse_1 extends _i1.SmartFake
    implements _i3.TVDetailResponse {
  _FakeTVDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetailResponse_2 extends _i1.SmartFake
    implements _i4.SeasonDetailResponse {
  _FakeSeasonDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i6.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getNowPlayingTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTV,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #getNowPlayingTV,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getPopularTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTV,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #getPopularTV,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getTopRatedTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTV,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #getTopRatedTV,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.TVDetail>> getTVDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVDetail,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i10.TVDetail>>.value(
            _FakeEither_0<_i8.Failure, _i10.TVDetail>(
          this,
          Invocation.method(
            #getTVDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i10.TVDetail>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getTVRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVRecommendations,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #getTVRecommendations,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> searchTV(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTV,
          [query],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #searchTV,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i10.TVDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i10.TVDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getWatchlistTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTV,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.TV>>(
          this,
          Invocation.method(
            #getWatchlistTV,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i11.SeasonDetail>> getTVSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i11.SeasonDetail>>.value(
                _FakeEither_0<_i8.Failure, _i11.SeasonDetail>(
          this,
          Invocation.method(
            #getTVSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i11.SeasonDetail>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i12.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i13.TVModel>> getNowPlayingTV() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTV,
          [],
        ),
        returnValue: _i7.Future<List<_i13.TVModel>>.value(<_i13.TVModel>[]),
      ) as _i7.Future<List<_i13.TVModel>>);

  @override
  _i7.Future<List<_i13.TVModel>> getPopularTV() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTV,
          [],
        ),
        returnValue: _i7.Future<List<_i13.TVModel>>.value(<_i13.TVModel>[]),
      ) as _i7.Future<List<_i13.TVModel>>);

  @override
  _i7.Future<List<_i13.TVModel>> getTopRatedTV() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTV,
          [],
        ),
        returnValue: _i7.Future<List<_i13.TVModel>>.value(<_i13.TVModel>[]),
      ) as _i7.Future<List<_i13.TVModel>>);

  @override
  _i7.Future<_i3.TVDetailResponse> getTVDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVDetail,
          [id],
        ),
        returnValue:
            _i7.Future<_i3.TVDetailResponse>.value(_FakeTVDetailResponse_1(
          this,
          Invocation.method(
            #getTVDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.TVDetailResponse>);

  @override
  _i7.Future<List<_i13.TVModel>> getTVRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVRecommendations,
          [id],
        ),
        returnValue: _i7.Future<List<_i13.TVModel>>.value(<_i13.TVModel>[]),
      ) as _i7.Future<List<_i13.TVModel>>);

  @override
  _i7.Future<List<_i13.TVModel>> searchTV(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTV,
          [query],
        ),
        returnValue: _i7.Future<List<_i13.TVModel>>.value(<_i13.TVModel>[]),
      ) as _i7.Future<List<_i13.TVModel>>);

  @override
  _i7.Future<_i4.SeasonDetailResponse> getTVSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue: _i7.Future<_i4.SeasonDetailResponse>.value(
            _FakeSeasonDetailResponse_2(
          this,
          Invocation.method(
            #getTVSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i4.SeasonDetailResponse>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i14.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlistTv(_i15.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tv],
        ),
        returnValue: _i7.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlistTv,
            [tv],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> removeWatchlist(_i15.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i7.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tv],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i15.TVTable?> getTVById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVById,
          [id],
        ),
        returnValue: _i7.Future<_i15.TVTable?>.value(),
      ) as _i7.Future<_i15.TVTable?>);

  @override
  _i7.Future<List<_i15.TVTable>> getWatchlistTV() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTV,
          [],
        ),
        returnValue: _i7.Future<List<_i15.TVTable>>.value(<_i15.TVTable>[]),
      ) as _i7.Future<List<_i15.TVTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i17.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i18.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i18.Database?>.value(),
      ) as _i7.Future<_i18.Database?>);

  @override
  String get tblWatchlist => (super.noSuchMethod(
        Invocation.getter(#tblWatchlist),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#tblWatchlist),
        ),
      ) as String);

  @override
  String get tblWatchlistTv => (super.noSuchMethod(
        Invocation.getter(#tblWatchlistTv),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#tblWatchlistTv),
        ),
      ) as String);

  @override
  _i7.Future<int> insertWatchlistMovie(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistMovie,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeWatchlistMovie(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistMovie,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<int> insertWatchlistTv(_i15.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tv],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeWatchlistTv(_i15.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tv],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<Map<String, dynamic>?> getTVById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTV,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  void onCreate(
    _i18.Database? db,
    int? version,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onCreate,
          [
            db,
            version,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i21.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i21.Uint8List>.value(_i21.Uint8List(0)),
      ) as _i7.Future<_i21.Uint8List>);

  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
