// Mocks generated by Mockito 5.4.4 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core/core.dart' as _i7;
import 'package:core/data/datasources/tv/tv_local_data_source.dart' as _i13;
import 'package:core/data/datasources/tv/tv_remote_data_source.dart' as _i11;
import 'package:core/data/models/tv/tv_detail_model.dart' as _i3;
import 'package:core/data/models/tv/tv_model.dart' as _i12;
import 'package:core/data/models/tv/tv_season_detail_model.dart' as _i4;
import 'package:core/data/models/tv/tv_table.dart' as _i14;
import 'package:core/domain/entities/tv/tv.dart' as _i8;
import 'package:core/domain/entities/tv/tv_detail.dart' as _i9;
import 'package:core/domain/entities/tv/tv_season_detail.dart' as _i10;
import 'package:core/domain/repositories/tv/tv_repository.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTVDetailResponse_1 extends _i1.SmartFake
    implements _i3.TVDetailResponse {
  _FakeTVDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetailResponse_2 extends _i1.SmartFake
    implements _i4.SeasonDetailResponse {
  _FakeSeasonDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i5.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> getNowPlayingTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTV,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #getNowPlayingTV,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> getPopularTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTV,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #getPopularTV,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> getTopRatedTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTV,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #getTopRatedTV,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TVDetail>> getTVDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVDetail,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, _i9.TVDetail>>.value(
            _FakeEither_0<_i7.Failure, _i9.TVDetail>(
          this,
          Invocation.method(
            #getTVDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.TVDetail>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> getTVRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVRecommendations,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #getTVRecommendations,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> searchTV(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTV,
          [query],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #searchTV,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i9.TVDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i9.TVDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);

  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> getWatchlistTV() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTV,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.TV>>(
          this,
          Invocation.method(
            #getWatchlistTV,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>> getTVSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>>.value(
                _FakeEither_0<_i7.Failure, _i10.SeasonDetail>(
          this,
          Invocation.method(
            #getTVSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i10.SeasonDetail>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i11.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i12.TVModel>> getNowPlayingTV() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTV,
          [],
        ),
        returnValue: _i6.Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]),
      ) as _i6.Future<List<_i12.TVModel>>);

  @override
  _i6.Future<List<_i12.TVModel>> getPopularTV() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTV,
          [],
        ),
        returnValue: _i6.Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]),
      ) as _i6.Future<List<_i12.TVModel>>);

  @override
  _i6.Future<List<_i12.TVModel>> getTopRatedTV() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTV,
          [],
        ),
        returnValue: _i6.Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]),
      ) as _i6.Future<List<_i12.TVModel>>);

  @override
  _i6.Future<_i3.TVDetailResponse> getTVDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.TVDetailResponse>.value(_FakeTVDetailResponse_1(
          this,
          Invocation.method(
            #getTVDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.TVDetailResponse>);

  @override
  _i6.Future<List<_i12.TVModel>> getTVRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVRecommendations,
          [id],
        ),
        returnValue: _i6.Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]),
      ) as _i6.Future<List<_i12.TVModel>>);

  @override
  _i6.Future<List<_i12.TVModel>> searchTV(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTV,
          [query],
        ),
        returnValue: _i6.Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]),
      ) as _i6.Future<List<_i12.TVModel>>);

  @override
  _i6.Future<_i4.SeasonDetailResponse> getTVSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.SeasonDetailResponse>.value(
            _FakeSeasonDetailResponse_2(
          this,
          Invocation.method(
            #getTVSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.SeasonDetailResponse>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i13.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlistTv(_i14.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlistTv,
            [tv],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> removeWatchlist(_i14.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tv],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i14.TVTable?> getTVById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVById,
          [id],
        ),
        returnValue: _i6.Future<_i14.TVTable?>.value(),
      ) as _i6.Future<_i14.TVTable?>);

  @override
  _i6.Future<List<_i14.TVTable>> getWatchlistTV() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTV,
          [],
        ),
        returnValue: _i6.Future<List<_i14.TVTable>>.value(<_i14.TVTable>[]),
      ) as _i6.Future<List<_i14.TVTable>>);
}
